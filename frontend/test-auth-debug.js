// Script de test pour diagnostiquer le probl√®me d'authentification
console.log('=== DIAGNOSTIC AUTHENTIFICATION ===');

// V√©rifier localStorage
const token = localStorage.getItem('token');
const userStr = localStorage.getItem('user');

console.log('üîç localStorage:');
console.log('- Token:', token ? '‚úÖ Pr√©sent' : '‚ùå Absent');
console.log('- User:', userStr ? '‚úÖ Pr√©sent' : '‚ùå Absent');

if (token) {
  console.log('- Token length:', token.length);
  console.log('- Token preview:', token.substring(0, 20) + '...');
}

if (userStr) {
  try {
    const user = JSON.parse(userStr);
    console.log('- User parsed:', user);
    console.log('- User name:', user.name);
    console.log('- User email:', user.email);
    console.log('- User role:', user.role);
  } catch (error) {
    console.error('‚ùå Erreur parsing user:', error);
  }
}

// V√©rifier si l'utilisateur est authentifi√©
const isAuthenticated = !!(token && userStr);
console.log('üîê Authentification:', isAuthenticated ? '‚úÖ OUI' : '‚ùå NON');

// Test des pages
console.log('\nüîç Test des pages:');
const pages = ['/profile', '/settings', '/my-requests', '/favorites', '/messages'];

pages.forEach(page => {
  console.log(`- ${page}: ${isAuthenticated ? '‚úÖ Accessible' : '‚ùå Redirection login'}`);
});

// V√©rifier les composants
console.log('\nüîç Composants:');
console.log('- UserMenu: Charg√©');
console.log('- AuthDebug: Charg√©');

// Test de navigation
console.log('\nüß™ Test de navigation:');
console.log('1. Cliquez sur l\'ic√¥ne de personne');
console.log('2. V√©rifiez si le menu s\'ouvre');
console.log('3. Cliquez sur "Mon Profil"');
console.log('4. V√©rifiez si vous allez vers /profile');

console.log('\nüìä R√©sum√©:');
console.log(`- Authentifi√©: ${isAuthenticated ? 'OUI' : 'NON'}`);
console.log(`- Token: ${token ? 'PR√âSENT' : 'ABSENT'}`);
console.log(`- User: ${userStr ? 'PR√âSENT' : 'ABSENT'}`);
console.log(`- Pages accessibles: ${isAuthenticated ? 'TOUTES' : 'AUCUNE'}`);

console.log('\n=== FIN DIAGNOSTIC ==='); 