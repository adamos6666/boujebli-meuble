const https = require('https');

console.log('üß™ Tests manuels de l\'application...\n');

// Test 1: V√©rifier que le frontend fonctionne
console.log('1Ô∏è‚É£ Test du frontend...');
console.log('‚úÖ Frontend accessible sur http://localhost:3000');
console.log('‚úÖ V√©rifiez manuellement les pages suivantes:');
console.log('   - Page d\'accueil: http://localhost:3000');
console.log('   - Catalogue: http://localhost:3000/catalogue');
console.log('   - Cuisines: http://localhost:3000/produits/cuisines');
console.log('   - Portes: http://localhost:3000/produits/portes');
console.log('   - Dressing: http://localhost:3000/produits/dressing');
console.log('   - Meubles: http://localhost:3000/produits/meubles');

// Test 2: V√©rifier le backend
console.log('\n2Ô∏è‚É£ Test du backend...');

function testBackendEndpoint(endpoint, description) {
  return new Promise((resolve) => {
    const options = {
      hostname: 'boujebli-meuble-backend.onrender.com',
      port: 443,
      path: endpoint,
      method: 'GET',
    };

    const req = https.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          console.log(`‚úÖ ${description}: ${res.statusCode} - ${jsonData.message || 'OK'}`);
          resolve({ status: res.statusCode, data: jsonData });
        } catch (e) {
          console.log(`‚ö†Ô∏è ${description}: ${res.statusCode} - R√©ponse non-JSON`);
          resolve({ status: res.statusCode, data: data });
        }
      });
    });

    req.on('error', (error) => {
      console.log(`‚ùå ${description}: Erreur - ${error.message}`);
      resolve({ status: 'error', data: error.message });
    });

    req.end();
  });
}

async function runBackendTests() {
  await testBackendEndpoint('/health', 'Sant√© de l\'API');
  await testBackendEndpoint('/produit-standard/test', 'Test de la base de donn√©es');
  await testBackendEndpoint('/produit-standard', 'R√©cup√©ration des produits');
}

runBackendTests().then(() => {
  console.log('\n3Ô∏è‚É£ Checklist de test manuel:');
  console.log('\nüìã Navigation et filtres:');
  console.log('   ‚ñ° Page d\'accueil se charge correctement');
  console.log('   ‚ñ° Navigation vers le catalogue fonctionne');
  console.log('   ‚ñ° Filtre "Tous" affiche tous les produits');
  console.log('   ‚ñ° Filtre "Cuisines" affiche 4 produits');
  console.log('   ‚ñ° Filtre "Portes" affiche 2 produits');
  console.log('   ‚ñ° Filtre "Dressing" affiche 2 produits');
  console.log('   ‚ñ° Filtre "Meubles" affiche 4 produits');
  
  console.log('\nüìã Pages de cat√©gories:');
  console.log('   ‚ñ° Page /produits/cuisines affiche 4 produits');
  console.log('   ‚ñ° Page /produits/portes affiche 2 produits');
  console.log('   ‚ñ° Page /produits/dressing affiche 2 produits');
  console.log('   ‚ñ° Page /produits/meubles affiche 4 produits');
  
  console.log('\nüìã Fonctionnalit√©s:');
  console.log('   ‚ñ° Changement de langue fonctionne');
  console.log('   ‚ñ° Images se chargent correctement');
  console.log('   ‚ñ° Design responsive sur mobile');
  console.log('   ‚ñ° Liens de navigation fonctionnent');
  
  console.log('\nüìã Performance:');
  console.log('   ‚ñ° Temps de chargement < 3 secondes');
  console.log('   ‚ñ° Images optimis√©es (pas de layout shift)');
  console.log('   ‚ñ° Navigation fluide entre les pages');
  
  console.log('\nüìã Accessibilit√©:');
  console.log('   ‚ñ° Navigation au clavier possible');
  console.log('   ‚ñ° Images ont des alt text');
  console.log('   ‚ñ° Contraste des couleurs suffisant');
  console.log('   ‚ñ° Structure de titres logique');
  
  console.log('\nüéØ Instructions de test:');
  console.log('1. Ouvrez http://localhost:3000 dans votre navigateur');
  console.log('2. Testez chaque page et fonctionnalit√© de la checklist');
  console.log('3. Utilisez les outils de d√©veloppement pour v√©rifier:');
  console.log('   - Console (pas d\'erreurs)');
  console.log('   - Network (temps de chargement)');
  console.log('   - Lighthouse (performance, accessibilit√©, SEO)');
  console.log('4. Testez sur mobile et tablette');
  console.log('5. Testez avec diff√©rents navigateurs');
  
  console.log('\nüöÄ Tests termin√©s! V√©rifiez la checklist ci-dessus.');
}); 